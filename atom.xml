<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>徐磊的博客</title>
  <icon>https://www.gravatar.com/avatar/abe0abd7dbfd8fa1e1b9e6ad42cef095</icon>
  <subtitle>也许路上偶尔会有风</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://blog.xulay.com/"/>
  <updated>2017-09-12T03:00:46.311Z</updated>
  <id>http://blog.xulay.com/</id>
  
  <author>
    <name>徐磊</name>
    <email>i@xulay.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Hexo博客之seo优化</title>
    <link href="http://blog.xulay.com/2017/09/11/Hexo%E5%8D%9A%E5%AE%A2%E4%B9%8Bseo%E4%BC%98%E5%8C%96/"/>
    <id>http://blog.xulay.com/2017/09/11/Hexo博客之seo优化/</id>
    <published>2017-09-11T02:19:07.000Z</published>
    <updated>2017-09-12T03:00:46.311Z</updated>
    
    <content type="html"><![CDATA[<p>个人搭建的博客没有基于任何知名的平台，那么在搜索引擎被收录的可能就微乎其微，那么如何提高被搜索到的几率呢？<br>这里就会牵扯到网站的SEO方案，我对这个不是很熟悉。搭建自己的个人博客的时候，查询了了不少资料，中间也遇到了一些小问题，但是最后也都解决掉了。所以在这里做一个总结。<br><a id="more"></a></p><h2 id="一、-百度seo"><a href="#一、-百度seo" class="headerlink" title="一、 百度seo"></a>一、 百度seo</h2><p>首先先要注册百度站长平台，添加个人网站。</p><h3 id="1-自动推送"><a href="#1-自动推送" class="headerlink" title="1. 自动推送"></a>1. 自动推送</h3><p>将以下代码放入博客的公共js部分，比如footer.ejs(这里就不介绍怎么放入了，不同主题自行搜索查询下)<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">&lt;script&gt;</div><div class="line">(<span class="function"><span class="title">function</span></span>()&#123;</div><div class="line">    var bp = document.createElement(<span class="string">'script'</span>);</div><div class="line">    var curProtocol = window.location.protocol.split(<span class="string">':'</span>)[0];</div><div class="line">    <span class="keyword">if</span> (curProtocol === <span class="string">'https'</span>) &#123;</div><div class="line">        bp.src = <span class="string">'https://zz.bdstatic.com/linksubmit/push.js'</span>;        </div><div class="line">    &#125;</div><div class="line">    <span class="keyword">else</span> &#123;</div><div class="line">        bp.src = <span class="string">'http://push.zhanzhang.baidu.com/push.js'</span>;</div><div class="line">    &#125;</div><div class="line">    var s = document.getElementsByTagName(<span class="string">"script"</span>)[0];</div><div class="line">    s.parentNode.insertBefore(bp, s);</div><div class="line">&#125;)();</div><div class="line">&lt;/script&gt;</div></pre></td></tr></table></figure></p><p>如果是yilia主题，一般在以下参考目录中加入JS<br><code>hexo/themes/yilia/layout/_partial/footer.ejs</code><br>注意是参考路径，每个皮肤的文件名都不同，但大概相似</p><h3 id="2-主动推送"><a href="#2-主动推送" class="headerlink" title="2. 主动推送"></a>2. 主动推送</h3><h4 id="2-1-首先，在Hexo根目录下，安装本插件："><a href="#2-1-首先，在Hexo根目录下，安装本插件：" class="headerlink" title="2.1 首先，在Hexo根目录下，安装本插件："></a>2.1 首先，在Hexo根目录下，安装本插件：</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ npm install hexo-baidu-url-submit --save</div></pre></td></tr></table></figure><h4 id="2-2-然后，同样在根目录下，把以下内容配置到-config-yml文件中"><a href="#2-2-然后，同样在根目录下，把以下内容配置到-config-yml文件中" class="headerlink" title="2.2 然后，同样在根目录下，把以下内容配置到_config.yml文件中:"></a>2.2 然后，同样在根目录下，把以下内容配置到_config.yml文件中:</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">baidu_url_submit:</div><div class="line">  count: 3 <span class="comment">## 比如3，代表提交最新的三个链接</span></div><div class="line">  host: blog.xulay.com <span class="comment">## 在百度站长平台中注册的域名</span></div><div class="line">  token: your_token <span class="comment">## 请注意这是您的秘钥， 请不要发布在公众仓库里!</span></div><div class="line">  path: baidu_urls.txt <span class="comment">## 文本文档的地址， 新链接会保存在此文本文档里</span></div></pre></td></tr></table></figure><p>注意点：</p><ul><li>host需要改成你自己的域名</li><li>token在<a href="http://zhanzhang.baidu.com" target="_blank" rel="external">百度站长工具</a>中登录后点击工具-网页抓取-链接提交中可以查询到（如图），没有百度账号的话自行注册一个<br><img src="http://oquhznm5y.bkt.clouddn.com/image/blog/seo-1.png" alt=""><h4 id="2-3-其次，记得查看-config-ym文件中url的值，-必须包含是百度站长平台注册的域名，-比如"><a href="#2-3-其次，记得查看-config-ym文件中url的值，-必须包含是百度站长平台注册的域名，-比如" class="headerlink" title="2.3 其次，记得查看_config.ym文件中url的值， 必须包含是百度站长平台注册的域名， 比如:"></a>2.3 其次，记得查看_config.ym文件中url的值， 必须包含是百度站长平台注册的域名， 比如:</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">url: http://blog.xulay.com</div><div class="line">root: /</div><div class="line">permalink: :year/:month/:day/:title/</div><div class="line">permalink_defaults:</div></pre></td></tr></table></figure></li></ul><h4 id="2-4-最后，加入新的deployer"><a href="#2-4-最后，加入新的deployer" class="headerlink" title="2.4 最后，加入新的deployer:"></a>2.4 最后，加入新的deployer:</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">deploy:</div><div class="line">- <span class="built_in">type</span>: git</div><div class="line">  repo: git@github.com:xulay/xulay.github.io.git</div><div class="line">  branch: master</div><div class="line">- <span class="built_in">type</span>: baidu_url_submitter <span class="comment">## 这是新加的</span></div></pre></td></tr></table></figure><p>注意点：</p><ul><li>repo要改成自己的</li><li>type前面要加- </li><li>注意缩进，否则会报错<br>执行<code>hexo d -g</code>的时候，新的连接就会被推送了。</li></ul><h3 id="3-sitemap"><a href="#3-sitemap" class="headerlink" title="3. sitemap"></a>3. sitemap</h3><h4 id="3-1-生成-百度sitemap-文件"><a href="#3-1-生成-百度sitemap-文件" class="headerlink" title="3.1 生成 百度sitemap 文件"></a>3.1 生成 百度sitemap 文件</h4><p>需要先安装 hexo 插件：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ npm install hexo-generator-baidu-sitemap --save</div></pre></td></tr></table></figure></p><p>然后<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo d -g</div></pre></td></tr></table></figure></p><p>本地文件夹hexo/public下就能正确的baidusitemap.xml 文件了。<br>blog.xulay.com/baidusitemap.xml也能访问到</p><h4 id="3-2-提交-sitemap-文件"><a href="#3-2-提交-sitemap-文件" class="headerlink" title="3.2 提交 sitemap 文件"></a>3.2 提交 sitemap 文件</h4><p>工具-网页抓取-链接提交-sitemap<br>转到链接提交处，选择自己的站点网址。找到自动提交，选择sitemap。按照提示的格式添加自己的baidusitemap文件</p><p>接下来要做的就是等待了，过上一两天就会在这里看到提取的 url 数量了</p><h2 id="二、-谷歌seo"><a href="#二、-谷歌seo" class="headerlink" title="二、 谷歌seo"></a>二、 谷歌seo</h2><p>谷歌很简单，只需要提交sitemap</p><h3 id="1、生成-sitemap-文件"><a href="#1、生成-sitemap-文件" class="headerlink" title="1、生成 sitemap 文件"></a>1、生成 sitemap 文件</h3><p>执行<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ npm install hexo-generator-sitemap --save</div></pre></td></tr></table></figure></p><p>然后<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo d -g</div></pre></td></tr></table></figure></p><p>本地文件夹hexo/public下就能正确的sitemap.xml 文件了。<br>blog.xulay.com/sitemap.xml也能访问到</p><h3 id="2、提交-sitemap-文件"><a href="#2、提交-sitemap-文件" class="headerlink" title="2、提交 sitemap 文件"></a>2、提交 sitemap 文件</h3><p>打开<a href="https://www.google.com/webmasters/tools/home#utm_source=zh-CN-wmxmsg&amp;utm_medium=wmxmsg&amp;utm_campaign=bm&amp;authuser=0" target="_blank" rel="external">Google Search Console</a>，没谷歌账号的话自行注册。</p><ol><li>添加自己的网站，添加了网站后，点击网站域名即可进入到站点地图的添加页面-抓取-站点地图</li><li>点击右上角的“添加/测试站点地图”</li><li>输入站点地图的名称的xml文档：sitemap.xml</li><li>提交sitemap后，一般都成功，刷新查看</li><li>在这里会显示你网站抓取情况和异常情况。首次添加需要等待。次日即可看到前一天的收录。添加后，你就可以在谷歌搜索框内使用“site:www.exmaple.com”的方式查看自己的网站搜录情况了</li></ol><h2 id="三、robots-txt"><a href="#三、robots-txt" class="headerlink" title="三、robots.txt"></a>三、robots.txt</h2><h3 id="新建文件robots-txt"><a href="#新建文件robots-txt" class="headerlink" title="新建文件robots.txt"></a>新建文件robots.txt</h3><ul><li>在 你的主题\source中新建文件robots.txt,内容可以参照我的<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">User-agent: *</div><div class="line">Allow: /</div><div class="line">Allow: /photos/</div><div class="line">Allow: /tags/</div><div class="line">Allow: /archives/</div><div class="line"></div><div class="line">Disallow: /vendors/</div><div class="line">Disallow: /js/</div><div class="line">Disallow: /css/</div><div class="line">Disallow: /fonts/</div><div class="line">Disallow: /vendors/</div><div class="line">Disallow: /fancybox/</div><div class="line"></div><div class="line">Sitemap: http://blog.xulay.com/sitemap.xml</div><div class="line">Sitemap: http://blog.xulay.com/baidusitemap.xml</div></pre></td></tr></table></figure></li></ul><p>其中Allow后面的就是你的menu；</p><ul><li>在robots.txt中添加下面的代码<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">Sitemap: http://blog.xulay.com/sitemap.xml</div><div class="line">Sitemap: http://blog.xulay.com/baidusitemap.xml</div></pre></td></tr></table></figure></li></ul><p>注意点：<br>请自行将<code>blog.xulay.com</code>改成自己的域名<br>然后<code>hexo d -g</code>提交一下</p><h2 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h2><p>Hexo 百度提交链接<br><a href="http://blog.csdn.net/jameshadoop/article/details/53323083" target="_blank" rel="external">http://blog.csdn.net/jameshadoop/article/details/53323083</a><br>Hexo Seo优化让你的博客在google搜索排名第一<br><a href="http://www.jianshu.com/p/86557c34b671" target="_blank" rel="external">http://www.jianshu.com/p/86557c34b671</a></p><p><strong>转载请注明出处：<a href="http://blog.xulay.com" target="_blank" rel="external">blog.xulay.com</a></strong><span style="float: right;" id="busuanzi_container_page_pv">浏览量[ <span id="busuanzi_value_page_pv"></span> ]</span></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;个人搭建的博客没有基于任何知名的平台，那么在搜索引擎被收录的可能就微乎其微，那么如何提高被搜索到的几率呢？&lt;br&gt;这里就会牵扯到网站的SEO方案，我对这个不是很熟悉。搭建自己的个人博客的时候，查询了了不少资料，中间也遇到了一些小问题，但是最后也都解决掉了。所以在这里做一个总结。&lt;br&gt;
    
    </summary>
    
      <category term="seo" scheme="http://blog.xulay.com/categories/seo/"/>
    
      <category term="hexo" scheme="http://blog.xulay.com/categories/seo/hexo/"/>
    
    
      <category term="技术" scheme="http://blog.xulay.com/tags/%E6%8A%80%E6%9C%AF/"/>
    
  </entry>
  
  <entry>
    <title>Hexo个人博客搭建--相册篇</title>
    <link href="http://blog.xulay.com/2017/09/09/Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA-%E7%9B%B8%E5%86%8C%E7%AF%87/"/>
    <id>http://blog.xulay.com/2017/09/09/Hexo个人博客搭建-相册篇/</id>
    <published>2017-09-09T07:26:52.000Z</published>
    <updated>2017-09-09T08:15:58.477Z</updated>
    
    <content type="html"><![CDATA[<p>本Blog主要是基于Hexo+Yilia+GitHub Page搭建，主要涉及的一些东西也是前端开发相关的，非常基础，工具和Yilia大部分都已经支持ok。<br>先介绍两个实用的小功能:</p><ul><li>网站访问量统计:<a href="http://ibruce.info/2015/04/04/busuanzi/" target="_blank" rel="external">不蒜子-关于访问量统计工具</a></li><li>网页加密：<a href="https://crackcer.com/hexo-aes-password.html" target="_blank" rel="external">使用AES算法加密hexo文章</a><a id="more"></a></li></ul><h2 id="相册搭建"><a href="#相册搭建" class="headerlink" title="相册搭建"></a>相册搭建</h2><p>对于Hexo静态网页来说，定位主要是文本，也不可能把大量的照片托管到GitHub上，因此要搭建一个相册，就必须选择一个图床，我选择的是七牛，对个人用户来说足够。把照片上传到七牛，然后在你的网站调用显示。<br><a href="http://blog.xulay.com/photos">我的Blog相册</a>大部分样式参考的是Yilia主题作者<a href="http://litten.me/photos" target="_blank" rel="external">Litten</a>的,主要做了一些小修改，和添加。</p><h3 id="第一步：在hexo-source文件夹下新建目录photos-并在phptos目录下新建photos-js，ins-css，index-ejs，文件"><a href="#第一步：在hexo-source文件夹下新建目录photos-并在phptos目录下新建photos-js，ins-css，index-ejs，文件" class="headerlink" title="第一步：在hexo/source文件夹下新建目录photos,并在phptos目录下新建photos.js，ins.css，index.ejs，文件"></a>第一步：在hexo/source文件夹下新建目录photos,并在phptos目录下新建photos.js，ins.css，index.ejs，文件</h3><h3 id="第二步：把照片上传到七牛，可以手动上传，也可以选择使用写js自动上传，这里我选择的是在网上找到的脚本。"><a href="#第二步：把照片上传到七牛，可以手动上传，也可以选择使用写js自动上传，这里我选择的是在网上找到的脚本。" class="headerlink" title="第二步：把照片上传到七牛，可以手动上传，也可以选择使用写js自动上传，这里我选择的是在网上找到的脚本。"></a>第二步：把照片上传到七牛，可以手动上传，也可以选择使用写js自动上传，这里我选择的是在网上找到的脚本。</h3><p>新建一个upload.js文件，内容（上传脚本）如下,最终生成json信息：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div></pre></td><td class="code"><pre><div class="line">const fs = require(<span class="string">"fs"</span>);</div><div class="line">const path = <span class="string">"./"</span>;</div><div class="line">var qiniu = require(<span class="string">"qiniu"</span>);</div><div class="line">var config = new qiniu.conf.Config();</div><div class="line">// 空间对应的机房</div><div class="line">config.zone = qiniu.zone.Zone_z0;</div><div class="line"></div><div class="line">//需要填写你的 Access Key 和 Secret Key</div><div class="line">qiniu.conf.ACCESS_KEY = <span class="string">'yourakey'</span>;</div><div class="line">qiniu.conf.SECRET_KEY = <span class="string">'yourskey'</span>;</div><div class="line"></div><div class="line">var mac = new qiniu.auth.digest.Mac(qiniu.conf.ACCESS_KEY, qiniu.conf.SECRET_KEY);</div><div class="line"></div><div class="line">//要上传的空间</div><div class="line">bucket = <span class="string">'yourspace'</span>;</div><div class="line"></div><div class="line">var options = &#123;</div><div class="line">   scope: bucket</div><div class="line">&#125;</div><div class="line"></div><div class="line">//构建上传策略函数</div><div class="line"><span class="keyword">function</span> uptoken(options) &#123;</div><div class="line">  var putPolicy = new qiniu.rs.PutPolicy(options);</div><div class="line">  <span class="built_in">return</span> putPolicy.uploadToken(mac);;</div><div class="line">&#125;</div><div class="line"></div><div class="line">//构造上传函数</div><div class="line"><span class="keyword">function</span> uploadFile(uptoken, key, localFile) &#123;</div><div class="line">    var formUploader = new qiniu.form_up.FormUploader(config);</div><div class="line">    var extra = new qiniu.form_up.PutExtra();</div><div class="line">    formUploader.putFile(uptoken, key, localFile, extra, <span class="keyword">function</span>(err, ret) &#123;</div><div class="line">      <span class="keyword">if</span>(!err) &#123;</div><div class="line">        // 上传成功， 处理返回值</div><div class="line">        console.log(<span class="string">'upload success : '</span>,ret.hash, ret.key);</div><div class="line">      &#125; <span class="keyword">else</span> &#123;</div><div class="line">        // 上传失败， 处理返回代码</div><div class="line">        console.log(err);</div><div class="line">      &#125;</div><div class="line">  &#125;);</div><div class="line">&#125;</div><div class="line"></div><div class="line">/**</div><div class="line"> * 读取文件后缀名称，并转化成小写</div><div class="line"> * @param file_name</div><div class="line"> * @returns</div><div class="line"> */</div><div class="line"><span class="keyword">function</span> getFilenameSuffix(file_name) &#123;</div><div class="line">  <span class="keyword">if</span>(file_name==<span class="string">'.DS_Store'</span>)&#123;</div><div class="line">    <span class="built_in">return</span> <span class="string">'.DS_Store'</span>;</div><div class="line">  &#125;</div><div class="line">    <span class="keyword">if</span> (file_name == null || file_name.length == 0)</div><div class="line">        <span class="built_in">return</span> null;</div><div class="line">    var result = /\.[^\.]+/.<span class="built_in">exec</span>(file_name);</div><div class="line">    <span class="built_in">return</span> result == null ? null : (result + <span class="string">""</span>).toLowerCase();</div><div class="line">&#125;</div><div class="line"></div><div class="line"></div><div class="line">fs.readdir(path, <span class="keyword">function</span> (err, files) &#123;</div><div class="line">    <span class="keyword">if</span> (err) &#123;</div><div class="line">        <span class="built_in">return</span>;</div><div class="line">    &#125;</div><div class="line">    var arr = [];</div><div class="line">    (<span class="keyword">function</span> iterator(index) &#123;</div><div class="line">        <span class="keyword">if</span> (index == files.length) &#123;</div><div class="line">            fs.writeFile(<span class="string">"./data.json"</span>, JSON.stringify(arr, null, <span class="string">"\t"</span>));</div><div class="line">            <span class="built_in">return</span>;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        fs.stat(path + <span class="string">"/"</span> + files[index], <span class="keyword">function</span> (err, stats) &#123;</div><div class="line">            <span class="keyword">if</span> (err) &#123;</div><div class="line">                <span class="built_in">return</span>;</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">if</span> (stats.isFile()) &#123;</div><div class="line">              var suffix = getFilenameSuffix(files[index]);</div><div class="line">              <span class="keyword">if</span>(!(suffix==<span class="string">'.js'</span>|| suffix == <span class="string">'.DS_Store'</span>|| suffix == <span class="string">'.json'</span>))&#123;</div><div class="line">                //要上传文件的本地路径</div><div class="line">                filePath = path+<span class="string">'/'</span>+files[index];</div><div class="line">                console.log(<span class="string">'抓取到文件: '</span>+files[index]);</div><div class="line">                //上传到七牛后保存的文件名</div><div class="line">                key = files[index];</div><div class="line">                //生成上传 Token</div><div class="line">                token = uptoken(options);</div><div class="line">                // 异步执行</div><div class="line">                uploadFile(token, key, filePath);</div><div class="line">                arr.push(files[index]);</div><div class="line">            &#125;</div><div class="line"></div><div class="line">                      &#125;</div><div class="line">            iterator(index + 1);</div><div class="line">        &#125;)</div><div class="line">    &#125;(0));</div><div class="line">&#125;);</div></pre></td></tr></table></figure></p><p>这边有以下几点注意点：</p><ol><li>首先要全局安装依赖qiniu <code>npm install qiniu -g</code></li><li>修改你七牛选择的空间对应的机房  <code>config.zone = qiniu.zone.Zone_z0;</code></li><li>填写你的 Access Key 和 Secret Key。登录七牛后找到对应的替换掉  <code>qiniu.conf.ACCESS_KEY = &#39;yourakey&#39;;``qiniu.conf.SECRET_KEY = &#39;yourskey&#39;;</code></li><li>设置要上传的空间 <code>bucket = &#39;yourspace&#39;;</code> yourspace为七牛设置的空间名称</li><li><code>fs.writeFile(&quot;./data.json&quot;, JSON.stringify(arr, null, &quot;\t&quot;));</code>  data.json为自动生成的json名，自行修改</li></ol><p>然后将需要上传的照片和upload.js放在同一目录中。<br>在当前目录右击选择Git Bash Here，输入一下代码<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ node upload.js</div></pre></td></tr></table></figure></p><p>这时可能会报错<code>Error: Cannot find module &#39;qiniu&#39;</code>，如果发生这种错误，首先确定qiniu依赖是否已经全局安装，如果没有安装，那么<code>npm install qiniu -g</code>安装下，如果已经安装了则去npm安装目录中看是否安装成功。我的路径为C:/Users/Administrator/AppData/Roaming/npm/node_modules/qiniu。把uoload.js中的<code>var qiniu = require(&quot;qiniu&quot;);</code>改成<code>var qiniu = require(&quot;C:/Users/Administrator/AppData/Roaming/npm/node_modules/qiniu&quot;);</code>路径为你自己电脑qiniu的路径，千万别直接复制我的。<br>如果没有报错则成功了。<br>会在当前目录下生成一个名为data.json的文件，这时候可以去七牛看一下，文件已经上传成功，json文件里是上传成功后返回的文件名，接下来要用到这文件，把data.json复制到hexo/source/photos目录下。</p><h3 id="第三步：把生成的json文件，使用js，插入到网页中；"><a href="#第三步：把生成的json文件，使用js，插入到网页中；" class="headerlink" title="第三步：把生成的json文件，使用js，插入到网页中；"></a>第三步：把生成的json文件，使用js，插入到网页中；</h3><p>在相应相册的index.ejs里面插入下面代码：（fancybox使用fancybox3）<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div></pre></td><td class="code"><pre><div class="line">---</div><div class="line">layout: post</div><div class="line">slug: <span class="string">"photos"</span></div><div class="line">title: <span class="string">"相册"</span></div><div class="line">noDate: <span class="string">"true"</span></div><div class="line">comments: <span class="string">"false"</span></div><div class="line">---</div><div class="line">&lt;link <span class="built_in">type</span>=<span class="string">"text/css"</span> href=<span class="string">"/ins.css"</span> rel=<span class="string">"stylesheet"</span>&gt;</div><div class="line">&lt;link <span class="built_in">type</span>=<span class="string">"text/css"</span> href=<span class="string">"/jquery.fancybox.css"</span> rel=<span class="string">"stylesheet"</span>&gt;</div><div class="line"></div><div class="line">&lt;div class=<span class="string">"instagram"</span>&gt;</div><div class="line">    &lt;section class=<span class="string">"archives album"</span>&gt;</div><div class="line">    &lt;ul class=<span class="string">"img-box-ul"</span>&gt;</div><div class="line">    &lt;/ul&gt;</div><div class="line">    &lt;/section&gt;</div><div class="line">&lt;/div&gt;</div><div class="line"></div><div class="line">&lt;script src=<span class="string">"https://code.jquery.com/jquery-3.2.1.min.js"</span>&gt;&lt;/script&gt;</div><div class="line">&lt;script src=<span class="string">"/jquery.lazyload.js"</span>&gt;&lt;/script&gt;</div><div class="line">&lt;script src=<span class="string">"/jquery.fancybox.js"</span>&gt;&lt;/script&gt;</div><div class="line">&lt;script src=<span class="string">"/photos.js"</span>&gt;&lt;/script&gt;</div><div class="line"></div><div class="line">&lt;script&gt;</div><div class="line">var that = this;</div><div class="line">$.getJSON(<span class="string">"data.json"</span>, <span class="keyword">function</span> (data) &#123;</div><div class="line">that.render(that.page, data);</div><div class="line">&#125;);</div><div class="line">window.onload=<span class="function"><span class="title">function</span></span> () &#123;</div><div class="line">    $(<span class="string">"img.lazy"</span>).lazyload(&#123;effect: <span class="string">"fadeIn"</span>&#125;);</div><div class="line">    &#125;</div><div class="line">&lt;/script&gt;</div></pre></td></tr></table></figure></p><p>注意点：</p><ol><li>fancybox使用fancybox3</li><li>引入的js可以是下载下来的，也可以是cdn在线的，但不能为压缩过的min.js文件，min会报错</li></ol><p>补充上面创建的photos.js，代码如下：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">var render = <span class="keyword">function</span>(page, data)&#123;</div><div class="line">var img = <span class="string">""</span>;</div><div class="line"><span class="keyword">for</span> (var i = 0; i &lt; data.length; i++) &#123;</div><div class="line">img += <span class="string">'&lt;li&gt;&lt;div class="img-box"&gt;'</span> + <span class="string">'&lt;a class="img-bg " rel="example_group" data-fancybox="images" href="http://yourqiniu.url.com/'</span> + data[i] + <span class="string">'"&gt;&lt;/a&gt;'</span> + <span class="string">'&lt;img class="lazy" data-original="http://yourqiniu.url.com/'</span> + data[i] + <span class="string">'" /&gt;'</span>  + <span class="string">'&lt;/div&gt;&lt;/li&gt;'</span>;</div><div class="line">&#125;</div><div class="line">$(<span class="string">".img-box-ul"</span>).append(img);</div><div class="line">$(<span class="string">".img-box-ul"</span>).lazyload();</div><div class="line">$(<span class="string">"a[rel=example_group]"</span>).fancybox();</div><div class="line">&#125;</div></pre></td></tr></table></figure></p><p>注意点：</p><ul><li><code>http://yourqiniu.url.com/</code>是你的七牛外链前缀，需要自行更换。</li></ul><h3 id="第四步：修改相关样式"><a href="#第四步：修改相关样式" class="headerlink" title="第四步：修改相关样式"></a>第四步：修改相关样式</h3><p>样式是基于Yilia样式进行修改的，原名字也未动,<a href="http://blog.xulay.com/photos/ins.css">样式链接，点击查看….</a></p><p>至此相册已经搭建完成了，如果需要分类,具体样式结构可以参考<a href="http://blog.xulay.com/photos/">我的相册</a></p><h3 id="第五步：相册分文件夹："><a href="#第五步：相册分文件夹：" class="headerlink" title="第五步：相册分文件夹："></a>第五步：相册分文件夹：</h3><p>hexo/source/photos目录下，是可以自己创建更多深层目录的，以此可以实现分文件夹，结构和上面文件结构一样，再嵌套一层即可，具体代码样式请看<a href="http://blog.xulay.com/photos/">我的相册</a></p><p><strong>转载请注明出处：<a href="http://blog.xulay.com" target="_blank" rel="external">blog.xulay.com</a></strong><span style="float: right;" id="busuanzi_container_page_pv">浏览量[ <span id="busuanzi_value_page_pv"></span> ]</span></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本Blog主要是基于Hexo+Yilia+GitHub Page搭建，主要涉及的一些东西也是前端开发相关的，非常基础，工具和Yilia大部分都已经支持ok。&lt;br&gt;先介绍两个实用的小功能:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;网站访问量统计:&lt;a href=&quot;http://ibruce.info/2015/04/04/busuanzi/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;不蒜子-关于访问量统计工具&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;网页加密：&lt;a href=&quot;https://crackcer.com/hexo-aes-password.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;使用AES算法加密hexo文章&lt;/a&gt;
    
    </summary>
    
      <category term="hexo" scheme="http://blog.xulay.com/categories/hexo/"/>
    
    
      <category term="技术" scheme="http://blog.xulay.com/tags/%E6%8A%80%E6%9C%AF/"/>
    
  </entry>
  
  <entry>
    <title>Hexo主题-yilia优化</title>
    <link href="http://blog.xulay.com/2017/09/09/Hexo%E4%B8%BB%E9%A2%98-yilia%E4%BC%98%E5%8C%96/"/>
    <id>http://blog.xulay.com/2017/09/09/Hexo主题-yilia优化/</id>
    <published>2017-09-09T06:44:19.000Z</published>
    <updated>2017-09-13T07:35:06.824Z</updated>
    
    <content type="html"><![CDATA[<p>最近在研究Hexo-GitHub来搭建博客，Hexo有许多高端大气的主题供我们选择，可以去<a href="https://github.com/hexojs/hexo/wiki/Themes" target="_blank" rel="external">https://github.com/hexojs/hexo/wiki/Themes</a>选择自己喜欢的主题更换，这里我选择的是<a href="https://github.com/litten/hexo-theme-yilia" target="_blank" rel="external">yilia</a>，本篇博客是对yilia主题的一些优化。</p><a id="more"></a><h2 id="添加RSS"><a href="#添加RSS" class="headerlink" title="添加RSS"></a>添加RSS</h2><p><code>npm install hexo-generator-feed --sava</code></p><p>注意，后面的参数–save绝对不能省，否则该插件信息不会写入package.json。<br><code>hexo clean</code>，<code>hexo g</code>，查看public文件夹，可以看到atom.xml文件。</p><h2 id="添加sitemap"><a href="#添加sitemap" class="headerlink" title="添加sitemap"></a>添加sitemap</h2><p><code>npm install hexo-generator-sitemap --save</code></p><p><code>hexo clean</code>，<code>hexo g</code>，查看public文件夹，可以看到sitemap.xml文件。<br>sitemap的初衷是给搜索引擎看的，为了提高搜索引擎对自己站点的收录效果，我们最好手动到google和百度等搜索引擎提交sitemap.xml。</p><h2 id="添加头像"><a href="#添加头像" class="headerlink" title="添加头像"></a>添加头像</h2><p>在hexo/themes/yilia/source/img中添加一个图片xulay.jpg，然后编辑hexo/themes/yilia/_config.yml：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#你的头像url</span></div><div class="line">avatar: <span class="string">"/img/xulay.jpg"</span></div></pre></td></tr></table></figure></p><h2 id="添加favicon"><a href="#添加favicon" class="headerlink" title="添加favicon"></a>添加favicon</h2><p>使用制作ico的工具（百度搜一个），制作一个16X16的favicon.ico。放置到hexo/themes/yilia/source中，然后编辑hexo/themes/yilia/_config.yml：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">favicon: /favicon.ico</div></pre></td></tr></table></figure></p><h2 id="archieves数量"><a href="#archieves数量" class="headerlink" title="archieves数量"></a>archieves数量</h2><p>全局配置文件hexo/_config.yml中有这么一段：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">per_page: 5</div><div class="line">pagination_dir: page</div></pre></td></tr></table></figure></p><p>这里的per_page，同时设置index、archive、tag、categoriy。如果想要单独设置，可以这么写：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">index_generator:</div><div class="line">  per_page: 5</div><div class="line"></div><div class="line">archive_generator:</div><div class="line">  per_page: 200</div><div class="line">  yearly: <span class="literal">true</span>  </div><div class="line">  monthly: <span class="literal">true</span> </div><div class="line"></div><div class="line">tag_generator:</div><div class="line">  per_page: 10 </div><div class="line"></div><div class="line">category_generator: </div><div class="line">  per_page: 10</div></pre></td></tr></table></figure></p><h2 id="文章模板"><a href="#文章模板" class="headerlink" title="文章模板"></a>文章模板</h2><p>打开hexo/scaffolds/post.md，可以看到：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">---</div><div class="line">title: &#123;&#123; title &#125;&#125;</div><div class="line">date: &#123;&#123; date &#125;&#125;</div><div class="line">tags:</div><div class="line">---</div></pre></td></tr></table></figure></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">---</div><div class="line">title: &#123;&#123; title &#125;&#125;</div><div class="line">date: &#123;&#123; date &#125;&#125;</div><div class="line">tags:</div><div class="line">categories: </div><div class="line">toc: <span class="literal">true</span></div><div class="line">---</div></pre></td></tr></table></figure><h2 id="鼠标点击小红心的设置"><a href="#鼠标点击小红心的设置" class="headerlink" title="鼠标点击小红心的设置"></a>鼠标点击小红心的设置</h2><ol><li>将 <a href="http://blog.xulay.com/love.js">love.js</a> 文件添加到 hexo/themes/yilia/source 文件目录下。</li><li>找到 hexo/themes/yilia/layout/_partial/footer.ejs 文件， 在文件的后面， 标签之前 添加以下代码：<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">&lt;!--页面点击小红心--&gt;</div><div class="line">&lt;script <span class="built_in">type</span>=<span class="string">"text/javascript"</span> src=<span class="string">"/love.js"</span>&gt;&lt;/script&gt;</div></pre></td></tr></table></figure></li></ol><h2 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h2><p>hexo主题优化<br><a href="http://www.voidking.com/2015/05/31/deve-hexo-theme-optimize/" target="_blank" rel="external">http://www.voidking.com/2015/05/31/deve-hexo-theme-optimize/</a></p><p><strong>转载请注明出处：<a href="http://blog.xulay.com" target="_blank" rel="external">blog.xulay.com</a></strong><span style="float: right;" id="busuanzi_container_page_pv">浏览量[ <span id="busuanzi_value_page_pv"></span> ]</span></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最近在研究Hexo-GitHub来搭建博客，Hexo有许多高端大气的主题供我们选择，可以去&lt;a href=&quot;https://github.com/hexojs/hexo/wiki/Themes&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/hexojs/hexo/wiki/Themes&lt;/a&gt;选择自己喜欢的主题更换，这里我选择的是&lt;a href=&quot;https://github.com/litten/hexo-theme-yilia&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;yilia&lt;/a&gt;，本篇博客是对yilia主题的一些优化。&lt;/p&gt;
    
    </summary>
    
      <category term="hexo" scheme="http://blog.xulay.com/categories/hexo/"/>
    
      <category term="yilia" scheme="http://blog.xulay.com/categories/hexo/yilia/"/>
    
    
      <category term="技术" scheme="http://blog.xulay.com/tags/%E6%8A%80%E6%9C%AF/"/>
    
  </entry>
  
  <entry>
    <title>基于Hexo+GitHub Pages 搭建博客详细教程</title>
    <link href="http://blog.xulay.com/2017/09/08/%E5%9F%BA%E4%BA%8EHexo-GitHub-Pages-%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E8%AF%A6%E7%BB%86%E6%95%99%E7%A8%8B/"/>
    <id>http://blog.xulay.com/2017/09/08/基于Hexo-GitHub-Pages-搭建博客详细教程/</id>
    <published>2017-09-08T08:58:03.000Z</published>
    <updated>2017-09-11T00:39:19.553Z</updated>
    
    <content type="html"><![CDATA[<p>这是一篇使用GitHub Pages和Hexo搭建免费独立博客的总结。<br>作为一个前端小白，虽说是个码农，但是一开始照着网上的各种教程去搭建的时候，还是挺混乱的，第一次搭建时花了两三天时间去研究才勉强弄好，搭建后也就放着没再去写博客，这几天想着继续搭建博客来记录平时自己遇到的问题，于是再次操作了一遍，这次就顺溜多了，在此参照网上的一些教程，总结一下搭建过程。<br><a id="more"></a></p><h2 id="一、-前言"><a href="#一、-前言" class="headerlink" title="一、 前言"></a>一、 前言</h2><p>我这篇教程，可能与网上搜到的其他教程略有不同，我在搭建时也遇到过完全按照一个教程来搭建时碰到问题的，所以我就把我成功搭建的流程写下来。<br>如果是小小白，可以先花时间去了解下：</p><ul><li><a href="http://git-scm.com/book/zh/v2" target="_blank" rel="external">Git</a></li><li><a href="https://github.com/" target="_blank" rel="external">GitHub</a></li><li><a href="https://pages.github.com/" target="_blank" rel="external">GitHub Pages</a></li><li><a href="https://hexo.io/zh-cn/" target="_blank" rel="external">Hexo</a></li><li><a href="http://www.appinn.com/markdown/#autoescape" target="_blank" rel="external">Markdown</a></li></ul><h2 id="二、-必要配置"><a href="#二、-必要配置" class="headerlink" title="二、 必要配置"></a>二、 必要配置</h2><h3 id="2-1-GitHub-Pages-仓库"><a href="#2-1-GitHub-Pages-仓库" class="headerlink" title="2.1 GitHub Pages 仓库"></a>2.1 GitHub Pages 仓库</h3><h4 id="2-1-1-创建对应仓库"><a href="#2-1-1-创建对应仓库" class="headerlink" title="2.1.1 创建对应仓库"></a>2.1.1 创建对应仓库</h4><p>首先先注册一个GitHub账号，这就不用多介绍了吧。<br>在自己的GitHub账号下创建一个新的仓库，命名为username.github.io（username是你的账号名)。你可以通过<a href="http://username.github.io" target="_blank" rel="external">http://username.github.io</a> 来访问你的个人主页。<br><img src="http://oquhznm5y.bkt.clouddn.com/image/setBlog/SetBlog-1.png" alt=""><br><img src="http://oquhznm5y.bkt.clouddn.com/image/setBlog/SetBlog-2.png" alt=""></p><h3 id="2-2-Git"><a href="#2-2-Git" class="headerlink" title="2.2 Git"></a>2.2 Git</h3><h4 id="2-2-1-安装-Git"><a href="#2-2-1-安装-Git" class="headerlink" title="2.2.1 安装 Git"></a>2.2.1 安装 Git</h4><p>在windows下安装git比较常用的有两种方式：</p><ol><li><a href="http://git-scm.com/download/win" target="_blank" rel="external">Git 官方版本的安装</a></li><li><a href="https://desktop.github.com/" target="_blank" rel="external">GitHub for Windows</a><h4 id="2-2-2-配置-Git"><a href="#2-2-2-配置-Git" class="headerlink" title="2.2.2 配置 Git"></a>2.2.2 配置 Git</h4>当安装完Git应该做的第一件事情就是设置用户名称和邮件地址。这样做很重要，因为每一个Git的提交都会使用这些信息，并且它会写入你的每一次提交中，不可更改：<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ git config --global user.name <span class="string">"username"</span></div><div class="line">$ git config --global user.email <span class="string">"username@example.com"</span></div></pre></td></tr></table></figure></li></ol><p>需要注意的是这里的username是随意的，username@example.com是你的联系邮箱，与github上的邮箱没有什么联系（不过我都是同一个邮箱）</p><h4 id="2-2-3-与github建立联系"><a href="#2-2-3-与github建立联系" class="headerlink" title="2.2.3 与github建立联系"></a>2.2.3 与github建立联系</h4><p>为了能够在本地使用git管理github上的项目，需要进行一些配置，这里介绍SSH的方法。上传文件需要配置ssh key，不然无法上传。</p><h5 id="2-2-3-1-检查电脑是否已经有SSH-keys。"><a href="#2-2-3-1-检查电脑是否已经有SSH-keys。" class="headerlink" title="2.2.3.1 检查电脑是否已经有SSH keys。"></a>2.2.3.1 检查电脑是否已经有SSH keys。</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ ls -al ~/.ssh</div></pre></td></tr></table></figure><p>若果目录中存在例如id_rsa.pub和id_rsa(如图)，证明已存在SSH keys。如果不存在就没有关系，如果存在的话，直接删除.ssh文件夹里面所有文件。<br><img src="http://oquhznm5y.bkt.clouddn.com/image/setBlog/SetBlog-3.png" alt=""></p><h5 id="2-2-3-2-如果没有SSH-key，则生成新的SSH-key。"><a href="#2-2-3-2-如果没有SSH-key，则生成新的SSH-key。" class="headerlink" title="2.2.3.2 如果没有SSH key，则生成新的SSH key。"></a>2.2.3.2 如果没有SSH key，则生成新的SSH key。</h5><p>输入以下指令（邮箱就是你注册Github时候的邮箱）后，回车：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ ssh-keygen -t rsa -C <span class="string">"your_email@example.com"</span></div></pre></td></tr></table></figure></p><p>一路按回车键即可，如果设置了密码请记住。（最好不要设置密码，一路回车就好）<br>这一步在~/.ssh/下生成了两个文件id_rsa 和 id_rsa.pub</p><h5 id="2-2-3-3-在GitHub添加SSH-key。"><a href="#2-2-3-3-在GitHub添加SSH-key。" class="headerlink" title="2.2.3.3 在GitHub添加SSH key。"></a>2.2.3.3 在GitHub添加SSH key。</h5><p>首先，拷贝key：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ clip &lt; ~/.ssh/id_rsa.pub</div></pre></td></tr></table></figure></p><p>然后，在GitHub右上方点击头像，选择”Settings”，在右边的”Personal settings”侧边栏选择”SSH and GPG keys”,点击“New SSH key”。接着粘贴key，点击”Add SSH key”按钮。<br><img src="http://oquhznm5y.bkt.clouddn.com/image/setBlog/SetBlog-4.png" alt=""><br>title随便取个名字，key 就是上面我们拷贝的内容，最后，测试链接：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ ssh -T git@github.com</div></pre></td></tr></table></figure></p><p>如果你看到（大概内容类似这样）：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">The authenticity of host <span class="string">'github.com (207.97.227.239)'</span> can<span class="string">'t be established.</span></div><div class="line"><span class="string">RSA key fingerprint is 16:27:ac:a5:76:28:2d:36:63:1b:56:4d:eb:df:a6:48.</span></div><div class="line"><span class="string">Are you sure you want to continue connecting (yes/no)?</span></div></pre></td></tr></table></figure></p><p>就键入：yes。之后将会看到如下信息：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">Hi username! You<span class="string">'ve successfully authenticated, but GitHub does not</span></div><div class="line"><span class="string">provide shell access.</span></div></pre></td></tr></table></figure></p><h2 id="2-4-Hexo"><a href="#2-4-Hexo" class="headerlink" title="2.4 Hexo"></a>2.4 Hexo</h2><h3 id="2-4-1-安装Hexo"><a href="#2-4-1-安装Hexo" class="headerlink" title="2.4.1 安装Hexo"></a>2.4.1 安装Hexo</h3><p>安装Hexo相当简单。在安装之前，必须检查电脑中是否已经安装下列应用程序：</p><ul><li><a href="http://nodejs.org/" target="_blank" rel="external">Node.js</a>（如果没有自行官网安装即可）</li><li><a href="http://git-scm.com/" target="_blank" rel="external">Git</a></li></ul><p>如果您的电脑中已经安装上述必备程序，那么恭喜您！接下来只需要使用 npm 即可完成 Hexo 的安装。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ npm install -g hexo-cli</div></pre></td></tr></table></figure></p><h3 id="2-4-2-使用Hexo建站"><a href="#2-4-2-使用Hexo建站" class="headerlink" title="2.4.2 使用Hexo建站"></a>2.4.2 使用Hexo建站</h3><p>安装完后，在你喜欢的文件夹内（例如E：/Hexo），点击鼠标右键选择Git bash，输入以下指令：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo init</div></pre></td></tr></table></figure></p><p>该命令会在目标文件夹内建立网站所需要的所有文件。接下来是安装依赖包：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ npm install</div></pre></td></tr></table></figure></p><p>这样，我们就已经搭建起本地的Hexo博客了。可以先执行以下命令（在对应文件夹下），然后再浏览器输入localhost:4000查看。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div><div class="line">$ hexo server</div></pre></td></tr></table></figure></p><p>这个博客只是本地的，别人是浏览不了的，之后需要部署到GitHub上。</p><h2 id="三、一般的搭建方法"><a href="#三、一般的搭建方法" class="headerlink" title="三、一般的搭建方法"></a>三、一般的搭建方法</h2><p>在上面，我们已经配置好了所需的所有东西，也成功地搭建了一个本地Hexo博客。现在，需要使用GitHub Pages搭建一个别人能够访问的Hexo博客了。</p><h3 id="3-1-使用默认主题"><a href="#3-1-使用默认主题" class="headerlink" title="3.1 使用默认主题"></a>3.1 使用默认主题</h3><p>我们继续使用上面的文件夹D:\Hexo（也可以新建一个文件夹重新生成），然后编辑该文件夹下的_config.yml。<br>默认生成的_config.yml：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># Deployment</span></div><div class="line"><span class="comment">## Docs: http://hexo.io/docs/deployment.html</span></div><div class="line">deploy:</div><div class="line">  <span class="built_in">type</span>:</div></pre></td></tr></table></figure></p><p>修改后的_config.yml：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">deploy:</div><div class="line">  <span class="built_in">type</span>: git</div><div class="line">  repo: 对应仓库的SSH地址（可以在GitHub对应的仓库中复制）<span class="comment">##例如 ：git@github.com:xulay/xulay.github.io.git</span></div><div class="line">  branch: master</div></pre></td></tr></table></figure></p><p><img src="http://oquhznm5y.bkt.clouddn.com/image/setBlog/SetBlog-5.png" alt=""><br>两点特别注意点：</p><ul><li>注意一定要复制SSH而不是HTTPS地址。</li><li>每一个: 后面都必须有一个空格，否则会引起错误。</li></ul><p>为了能够使Hexo部署到GitHub上，需要安装一个插件：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ npm install hexo-deployer-git --save</div></pre></td></tr></table></figure></p><p>然后，执行下列指令即可完成部署：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div><div class="line">$ hexo deploy</div></pre></td></tr></table></figure></p><p>之后，可以通过在浏览器键入：username.github.io进行浏览，开心吧~。可以看到我们的博客已成功搭建，接下来就是一些主题的优化和配置呢。</p><h3 id="3-2-Hexo配置文件"><a href="#3-2-Hexo配置文件" class="headerlink" title="3.2 Hexo配置文件"></a>3.2 Hexo配置文件</h3><p>hexo里面有两个常用到的配置文件，分别是整个博客的配置文件E:/Hexo/_config.yml和主题的配置文件E:/Hexo/themes/yilia/_config.yml，hexo3.0使用的默认主题是landscape，所以你们对应的地址为E:/Hexo/themes/landscape/_config.yml；<br>配置文件大致说明如下：<br>E:/Hexo/_config.yml<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># Hexo Configuration</span></div><div class="line"><span class="comment">## Docs: https://hexo.io/docs/configuration.html</span></div><div class="line"><span class="comment">## Source: https://github.com/hexojs/hexo/</span></div><div class="line"></div><div class="line"><span class="comment"># Site</span></div><div class="line">title: 徐磊的博客  <span class="comment">#博客名</span></div><div class="line">subtitle: 也许路上偶尔会有风   <span class="comment">#副标题</span></div><div class="line">description: 徐磊,擅长各项前端技能，移动端开发。此为博客一枚。  <span class="comment">#用于搜索，没有直观表现</span></div><div class="line">author: xulay   <span class="comment">#作者</span></div><div class="line">language: zh-CN <span class="comment">#语言</span></div><div class="line">timezone: <span class="comment">#时区，此处不填写，hexo会以你目前电脑的时区为默认值</span></div><div class="line">email: i@xulay.com</div><div class="line">keywords: <span class="string">"徐磊,xulay,前端,js,jquery,javascript,html5,开发者,程序猿,程序媛,极客,编程,代码,开源,IT网站,Developer,Programmer,Coder,Geek,html,css,css3,用户体验"</span> <span class="comment">#关键字</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="comment"># URL   暂不配置，使用默认值</span></div><div class="line"><span class="comment">## If your site is put in a subdirectory, set url as 'http://yoursite.com/child' and root as '/child/'</span></div><div class="line">url: http://xulay.com</div><div class="line">root: /</div><div class="line">permalink: :year/:month/:day/:title/</div><div class="line">permalink_defaults:</div><div class="line"></div><div class="line"><span class="comment"># Directory   暂不配置，使用默认值</span></div><div class="line">source_dir: <span class="built_in">source</span></div><div class="line">public_dir: public</div><div class="line">tag_dir: tags</div><div class="line">archive_dir: archives</div><div class="line">category_dir: categories</div><div class="line">code_dir: downloads/code</div><div class="line">i18n_dir: :lang</div><div class="line">skip_render:</div><div class="line"></div><div class="line"><span class="comment"># Writing   文章布局等，使用默认值</span></div><div class="line">new_post_name: :title.md <span class="comment"># File name of new posts</span></div><div class="line">default_layout: post</div><div class="line">titlecase: <span class="literal">false</span> <span class="comment"># Transform title into titlecase</span></div><div class="line">external_link: <span class="literal">true</span> <span class="comment"># Open external links in new tab</span></div><div class="line">filename_case: 0</div><div class="line">render_drafts: <span class="literal">false</span></div><div class="line">post_asset_folder: <span class="literal">false</span></div><div class="line">relative_link: <span class="literal">false</span></div><div class="line">future: <span class="literal">true</span></div><div class="line">highlight:</div><div class="line">  <span class="built_in">enable</span>: <span class="literal">true</span></div><div class="line">  line_number: <span class="literal">true</span></div><div class="line">  auto_detect: <span class="literal">false</span></div><div class="line">  tab_replace:</div><div class="line">  </div><div class="line"><span class="comment"># Home page setting</span></div><div class="line"><span class="comment"># path: Root path for your blogs index page. (default = '')</span></div><div class="line"><span class="comment"># per_page: Posts displayed per page. (0 = disable pagination)</span></div><div class="line"><span class="comment"># order_by: Posts order. (Order by date descending by default)</span></div><div class="line">index_generator:</div><div class="line">  path: <span class="string">''</span></div><div class="line">  per_page: 10</div><div class="line">  order_by: -date</div><div class="line">  </div><div class="line"><span class="comment"># Category &amp; Tag    暂不配置，使用默认值</span></div><div class="line">default_category: uncategorized</div><div class="line">category_map:</div><div class="line">tag_map:</div><div class="line"></div><div class="line"><span class="comment"># Date / Time format    时间格式，使用默认值</span></div><div class="line"><span class="comment">## Hexo uses Moment.js to parse and display date</span></div><div class="line"><span class="comment">## You can customize the date format as defined in</span></div><div class="line"><span class="comment">## http://momentjs.com/docs/#/displaying/format/</span></div><div class="line">date_format: YYYY-MM-DD</div><div class="line">time_format: HH:mm:ss</div><div class="line"></div><div class="line"><span class="comment"># Pagination</span></div><div class="line"><span class="comment">## Set per_page to 0 to disable pagination</span></div><div class="line">per_page: 8   <span class="comment">#每页显示的文章数，0表示不分页</span></div><div class="line">pagination_dir: page</div><div class="line"></div><div class="line"><span class="comment"># Extensions   插件配置，暂时不配置</span></div><div class="line"><span class="comment">## Plugins: https://hexo.io/plugins/</span></div><div class="line"><span class="comment">## Themes: https://hexo.io/themes/</span></div><div class="line">theme: yilia    <span class="comment">#使用的主题</span></div><div class="line"></div><div class="line"><span class="comment"># Deployment  用于部署到github</span></div><div class="line"><span class="comment">## Docs: https://hexo.io/docs/deployment.html</span></div><div class="line">deploy:</div><div class="line">  <span class="built_in">type</span>: git</div><div class="line">  repo: git@github.com:xulay/xulay.github.io.git</div><div class="line">  branch: master</div></pre></td></tr></table></figure></p><p>如果想要使用其他主题，可以使用git clone将别人的主题拷贝到D:\Hexo\themes下，然后将_config.yml中的theme: landscape中的landscape（默认主题）改为对应的主题名字。<br>详细步骤可以参考网上的指南。</p><h2 id="四、如何使用？"><a href="#四、如何使用？" class="headerlink" title="四、如何使用？"></a>四、如何使用？</h2><p>新建一篇博文可通过以下的命令<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"name"</span></div></pre></td></tr></table></figure></p><p>其中name为博文的名字，建立完成之后，可以在./source/_posts文件夹下发现我们刚刚建立的 name.md文件。使用你熟悉的编辑器打开，便可以进行博文的撰写。博文支持MarkDown语法的编写，下面是一个示例文件的内容<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">---</div><div class="line">title: 基于Hexo+GitHub Pages 搭建博客详细教程</div><div class="line">toc: <span class="literal">true</span></div><div class="line">date: 2017-09-08 16:58:03</div><div class="line">tags: </div><div class="line">- 博客</div><div class="line">categories:</div><div class="line">- 教程</div><div class="line">---</div></pre></td></tr></table></figure></p><p>博文写好之后，在每次发布之前，我们要先将写好的博客生成静态文件，执行以下命令<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure></p><p>之后生成的文件会放在./public目录下，这便是我们将要部署到GitHub上的全部内容。<br>静态文件生成之后，便可以部署到GitHub上<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure></p><p>然后打开我们的博客 <a href="http://username.github.io/" target="_blank" rel="external">http://username.github.io/</a> 已经可以看到刚刚新建的博文。</p><h2 id="五、主题推荐"><a href="#五、主题推荐" class="headerlink" title="五、主题推荐"></a>五、主题推荐</h2><p>Hexo提供了许多的主题可供我们选择和使用，在./themes目录下存放主题。刚才默认生成的博客用的就是默认的主题landscape，hexo全部主题。<br>知乎上的主题推荐：<a href="https://www.zhihu.com/question/24422335" target="_blank" rel="external">有哪些好看的 Hexo 主题？</a>（对应的主题一般都有相关的使用说明，这里就不多说咯）<br>我自己使用的是<a href="https://github.com/litten/hexo-theme-yilia" target="_blank" rel="external">yilia</a>主题，这个自己去体验研究吧！</p><h2 id="六、绑定域名"><a href="#六、绑定域名" class="headerlink" title="六、绑定域名"></a>六、绑定域名</h2><p>博客搭建好后，我们可以通过之前设置好的GitHub仓库地址来访问，比如我的：<a href="http://xulay.github.io" target="_blank" rel="external">http://xulay.github.io</a>，而且GitHub是免费替我们托管的的，如果我们想要设置自己的专属的域名，我们可以去<a href="https://netcn.console.aliyun.com/core/domain/list" target="_blank" rel="external">阿里云</a>购买域名。购买域名后点击解析。<br>操作如下：</p><ul><li>点击添加解析，设置记录类型为A，主机记录为@，解析线路默认，记录值为 192.30.252.153。</li><li>点击添加解析，设置记录类型为A，主机记录为@，解析线路默认，记录值为 192.30.252.154。</li><li>点击添加解析，设置记录类型为CNAME，主机记录为www，解析线路默认，记录值为 你的博客地址（例如xulay.github.io）。(这是设置一级域名，如：xulay.com，如果需要设置二级，如：blog.xulay.com域名请看第四条)</li><li>点击添加解析，设置记录类型为CNAME，主机记录为blog（这里为二级域名的前缀，可以任意值），解析线路默认，记录值为 你的博客地址（例如xulay.github.io）。(如果这样设置，访问地址则为blog.xulay.com)<br><img src="http://oquhznm5y.bkt.clouddn.com/image/setBlog/SetBlog-6.png" alt=""><br>按照如上设置完成之后， 可能不会立即生效，等个几分钟，在./source目录下新建文件CNAME（没有后缀名），文件中写上我们要绑定的域名，例如: xulay.com(对应上面第三点操作)，或者blog.xulay.com（对应上面第四点操作）然后执行（很重要的，别忘记了）<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div><div class="line">$ hexo deploy</div></pre></td></tr></table></figure></li></ul><p>这时就可以通过<a href="http://xulay.com" target="_blank" rel="external">http://xulay.com</a>（<a href="http://blog.xulay.com">blog.xulay.com</a>）访问我们的博客了</p><h2 id="七、提示"><a href="#七、提示" class="headerlink" title="七、提示"></a>七、提示</h2><p>hexo现在支持更加简单的命令格式了，比如：</p><ul><li>hexo g == hexo generate</li><li>hexo d == hexo deploy</li><li>hexo s == hexo server</li><li>hexo n == hexo new</li></ul><h2 id="八、常见的问题和解决办法"><a href="#八、常见的问题和解决办法" class="headerlink" title="八、常见的问题和解决办法"></a>八、常见的问题和解决办法</h2><h3 id="8-1-ERROR-Deployer-not-found-git"><a href="#8-1-ERROR-Deployer-not-found-git" class="headerlink" title="8.1 ERROR Deployer not found: git"></a>8.1 ERROR Deployer not found: git</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo d</div></pre></td></tr></table></figure><p>之后可能会报错说<br><code>ERROR Deployer not found: git</code><br>解决办法：安装依赖<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ npm install hexo-deployer-git –save</div></pre></td></tr></table></figure></p><h3 id="8-2-依赖缺失及其他莫名奇妙的报错"><a href="#8-2-依赖缺失及其他莫名奇妙的报错" class="headerlink" title="8.2 依赖缺失及其他莫名奇妙的报错"></a>8.2 依赖缺失及其他莫名奇妙的报错</h3><p>解决办法：</p><ol><li>删除本地目录下hexo的node_modeules文件夹</li><li>右击选择git Bash Here</li><li>输入<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ npm install</div></pre></td></tr></table></figure></li></ol><p>重新安装所有依赖，等待安装完毕后执行：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ hexo clean</div><div class="line">$ hexo g</div><div class="line">$ hexo d</div></pre></td></tr></table></figure></p><h2 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h2><p>GitHub Pages + Hexo搭建博客<br><a href="https://crazymilk.github.io/2015/12/28/GitHub-Pages-Hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2" target="_blank" rel="external">https://crazymilk.github.io/2015/12/28/GitHub-Pages-Hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2</a><br>基于Hexo+GitHub Pages 搭建博客详细教程<br><a href="http://blog.csdn.net/u011974987/article/details/51331822" target="_blank" rel="external">http://blog.csdn.net/u011974987/article/details/51331822</a></p><p><strong>转载请注明出处：<a href="http://blog.xulay.com" target="_blank" rel="external">blog.xulay.com</a></strong><span style="float: right;" id="busuanzi_container_page_pv">浏览量[ <span id="busuanzi_value_page_pv"></span> ]</span></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这是一篇使用GitHub Pages和Hexo搭建免费独立博客的总结。&lt;br&gt;作为一个前端小白，虽说是个码农，但是一开始照着网上的各种教程去搭建的时候，还是挺混乱的，第一次搭建时花了两三天时间去研究才勉强弄好，搭建后也就放着没再去写博客，这几天想着继续搭建博客来记录平时自己遇到的问题，于是再次操作了一遍，这次就顺溜多了，在此参照网上的一些教程，总结一下搭建过程。&lt;br&gt;
    
    </summary>
    
      <category term="教程" scheme="http://blog.xulay.com/categories/%E6%95%99%E7%A8%8B/"/>
    
      <category term="博客" scheme="http://blog.xulay.com/categories/%E6%95%99%E7%A8%8B/%E5%8D%9A%E5%AE%A2/"/>
    
      <category term="hexo" scheme="http://blog.xulay.com/categories/%E6%95%99%E7%A8%8B/%E5%8D%9A%E5%AE%A2/hexo/"/>
    
    
      <category term="技术" scheme="http://blog.xulay.com/tags/%E6%8A%80%E6%9C%AF/"/>
    
  </entry>
  
</feed>
